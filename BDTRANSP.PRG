* *********************************************************
* *
* * 22/05/2007             BDTRANSP.DBC             17:50:37
* *
* *********************************************************
* *
* * Description:
* * This program was automatically generated by GENDBC
* * Version 2.26.67
* *
* *********************************************************


DisplayStatus([Creating database...])
CLOSE DATA ALL
CREATE DATABASE 'BDTRANSP.DBC'
DisplayStatus([Creating table TRANSP...])
MakeTable_TRANSP()
DisplayStatus([Creating table TRANSP_EQUIPE...])
MakeTable_TRANSP_EQUIPE()
DisplayStatus([Creating table EVENTO_EQUIPE...])
MakeTable_EVENTO_EQUIPE()
DisplayStatus([Creating table TRANSP_ITINERARIO...])
MakeTable_TRANSP_ITINERARIO()
DisplayStatus([Creating table TABTRANS...])
MakeTable_TABTRANS()
DisplayStatus([Creating table TABTRANS_CFG...])
MakeTable_TABTRANS_CFG()
DisplayStatus([Creating table PGEQP...])
MakeTable_PGEQP()
DisplayStatus([Creating table PGEQP_CFG...])
MakeTable_PGEQP_CFG()
DisplayStatus([Creating table EVENTO...])
MakeTable_EVENTO()
DisplayStatus([Creating table EVENTO_AGENDA...])
MakeTable_EVENTO_AGENDA()
DisplayStatus([Creating table TRANSP_PACIENTE...])
MakeTable_TRANSP_PACIENTE()
DisplayStatus([Finished.])


********* Procedure Re-Creation *********
IF !FILE([BDTRANSP.krt])
    ? [Warning! No Procedure File Found!]
ELSE
	CLOSE DATABASE
	USE 'BDTRANSP.DBC'
	g_SetSafety = SET('SAFETY')
	SET SAFETY OFF
	LOCATE FOR Objectname = 'StoredProceduresSource'
	IF FOUND()
        APPEND MEMO Code FROM [BDTRANSP.krt] OVERWRITE
	    REPLACE Code WITH SUBSTR(Code, 70, 2)
	ENDIF
	LOCATE FOR Objectname = 'StoredProceduresObject'
	IF FOUND()
        APPEND MEMO Code FROM [BDTRANSP.krt] OVERWRITE
        REPLACE Code WITH SUBSTR(Code, 72)
	ENDIF
    SET SAFETY &g_SetSafety
	USE
	OPEN DATABASE [BDTRANSP.DBC]
ENDIF

FUNCTION MakeTable_TRANSP
***** Table setup for TRANSP *****
CREATE TABLE 'TRANSP.DBF' NAME 'TRANSP' (IDTRANSP I NOT NULL AUTOINC NEXTVALUE 1273 STEP 1, ;
                     IDFILIAL C(2) NOT NULL, ;
                     IDTRANSP_PAI I NOT NULL, ;
                     SOLICITADO_EM T NOT NULL, ;
                     ORIGEM C(10) NOT NULL, ;
                     IDATENDENTE I NOT NULL, ;
                     SITUACAO C(1) NOT NULL, ;
                     SOLICITANTE_COD C(15) NOT NULL, ;
                     SOLICITANTE_NOME C(40) NOT NULL, ;
                     SOLICITANTE_FONE C(20) NOT NULL, ;
                     OBSERVACAO M NOT NULL, ;
                     KM_QUANT N(4, 0) NOT NULL, ;
                     VALOR_INICIAL Y NOT NULL, ;
                     PEDAGIO Y NOT NULL, ;
                     EXTRAS Y NOT NULL, ;
                     HRP_QUANT N(3, 0) NOT NULL, ;
                     HRP_VALOR Y NOT NULL, ;
                     DESCONTO Y NOT NULL, ;
                     ACRESCIMO Y NOT NULL, ;
                     TIPO_TRANSPORTE C(10) NOT NULL, ;
                     TRAJETO C(10) NOT NULL, ;
                     ITINERARIO C(10) NOT NULL, ;
                     DATA_TRANSPORTE T NOT NULL, ;
                     IDUNIDADE I NOT NULL, ;
                     HR_SAIDA T NOT NULL, ;
                     HR_CHAGA_D1 T NOT NULL, ;
                     HR_SAIDA_D1 T NOT NULL, ;
                     HR_CHEGA_D2 T NOT NULL, ;
                     HR_SAIDA_D2 T NOT NULL, ;
                     HR_RETORNO T NOT NULL, ;
                     FAT_CODIGO C(15) NOT NULL, ;
                     FAT_NOME C(60) NOT NULL, ;
                     FAT_CEP C(10) NOT NULL, ;
                     FAT_END C(40) NOT NULL, ;
                     FAT_BAIRRO C(25) NOT NULL, ;
                     FAT_CIDADE C(25) NOT NULL, ;
                     FAT_UF C(2) NOT NULL, ;
                     FAT_FORMA C(15) NOT NULL, ;
                     FAT_PORTADOR I NOT NULL, ;
                     FAT_VENCIMENTO D NOT NULL, ;
                     FAT_CONTROLE I NOT NULL, ;
                     FAT_CGC_CPF C(18) NOT NULL, ;
                     V_CENTRAL C(40) NOT NULL, ;
                     V_COBRANCA C(40) NOT NULL, ;
                     V_PESSOAL C(40) NOT NULL, ;
                     V_DIRETORIA C(40) NOT NULL, ;
                     V_FINANCEIRO C(40) NOT NULL, ;
                     AUDITORIA C(130) NOT NULL)

***** Create each index for TRANSP *****
INDEX ON IDFILIAL TAG IDFILIAL COLLATE 'MACHINE'
INDEX ON SOLICITADO_EM TAG SOLICITADO COLLATE 'MACHINE'
INDEX ON SOLICITANTE_COD TAG SOLICITANT COLLATE 'MACHINE'
INDEX ON SITUACAO TAG SITUACAO COLLATE 'MACHINE'
INDEX ON FAT_CONTROLE TAG FAT_CONTRO COLLATE 'MACHINE'
INDEX ON IDTRANSP_PAI TAG ID_PAI COLLATE 'MACHINE'
INDEX ON FAT_CODIGO TAG FAT_CODIGO COLLATE 'MACHINE'
INDEX ON IDTRANSP TAG IDTRANSP COLLATE 'MACHINE'

***** Change properties for TRANSP *****
DBSETPROP('TRANSP.ORIGEM', 'Field', 'Comment', "EVENTUAL/ASSOCIADO/CONVENIO")
DBSETPROP('TRANSP.SITUACAO', 'Field', 'Comment', "COTAÇÃO/PENDENTE/EM ANDAMENTO/REJEITADO/CANCELADO")
DBSETPROP('TRANSP.DESCONTO', 'Field', 'Caption', "Desconto")
DBSETPROP('TRANSP.FAT_CODIGO', 'Field', 'Caption', "Cod.Faturar")
DBSETPROP('TRANSP.FAT_NOME', 'Field', 'Caption', "Nome")
DBSETPROP('TRANSP.FAT_NOME', 'Field', 'Format', "!K")
DBSETPROP('TRANSP.FAT_CEP', 'Field', 'Caption', "CEP")
DBSETPROP('TRANSP.FAT_CEP', 'Field', 'Format', "K")
DBSETPROP('TRANSP.FAT_END', 'Field', 'Caption', "Endereço")
DBSETPROP('TRANSP.FAT_END', 'Field', 'Format', "!K")
DBSETPROP('TRANSP.FAT_BAIRRO', 'Field', 'Caption', "Bairro")
DBSETPROP('TRANSP.FAT_BAIRRO', 'Field', 'Format', "!K")
DBSETPROP('TRANSP.FAT_CIDADE', 'Field', 'Format', "!K")
DBSETPROP('TRANSP.FAT_UF', 'Field', 'Caption', "UF")
DBSETPROP('TRANSP.FAT_UF', 'Field', 'Format', "!K")
DBSETPROP('TRANSP.FAT_FORMA', 'Field', 'Caption', "Forma Pagto")
DBSETPROP('TRANSP.FAT_FORMA', 'Field', 'Format', "!K")
DBSETPROP('TRANSP.FAT_PORTADOR', 'Field', 'Caption', "Portador")
DBSETPROP('TRANSP.FAT_PORTADOR', 'Field', 'Format', "K")
DBSETPROP('TRANSP.FAT_VENCIMENTO', 'Field', 'Caption', "Vencimento")
DBSETPROP('TRANSP.FAT_VENCIMENTO', 'Field', 'Format', "KE")
ENDFUNC

FUNCTION MakeTable_TRANSP_EQUIPE
***** Table setup for TRANSP_EQUIPE *****
CREATE TABLE 'TRANSP_EQUIPE.DBF' NAME 'TRANSP_EQUIPE' (I_D I NOT NULL AUTOINC NEXTVALUE 2552 STEP 1, ;
                            IDTRANSP I NOT NULL, ;
                            IDMEMBRO I NOT NULL, ;
                            TIPO_TRABALHO C(10) NOT NULL, ;
                            VALOR Y NOT NULL, ;
                            VALOR_REAL Y NOT NULL, ;
                            HR_AVISO T NOT NULL, ;
                            HR_CHEGADA T NOT NULL, ;
                            IDA C(1) NOT NULL, ;
                            VOLTA C(1) NOT NULL, ;
                            PROGPAGTO D NOT NULL, ;
                            ATZAPAGAR T NOT NULL, ;
                            IDAPAGAR I NOT NULL, ;
                            AUDITORIA C(130) NOT NULL)

***** Create each index for TRANSP_EQUIPE *****
INDEX ON IDMEMBRO TAG IDMEMBRO COLLATE 'MACHINE'
INDEX ON IDTRANSP TAG IDTRANSP COLLATE 'MACHINE'
ALTER TABLE 'TRANSP_EQUIPE' ADD PRIMARY KEY I_D TAG I_D COLLATE 'MACHINE'

***** Change properties for TRANSP_EQUIPE *****
ENDFUNC

FUNCTION MakeTable_EVENTO_EQUIPE
***** Table setup for EVENTO_EQUIPE *****
CREATE TABLE 'EVENTO_EQUIPE.DBF' NAME 'EVENTO_EQUIPE' (I_D I NOT NULL AUTOINC NEXTVALUE 534 STEP 1, ;
                            IDEVENTO I NOT NULL, ;
                            IDMEMBRO I NOT NULL, ;
                            TIPO_TRABALHO C(10) NOT NULL, ;
                            VALOR Y NOT NULL, ;
                            VALOR_REAL Y NOT NULL, ;
                            HR_AVISO T NOT NULL, ;
                            HR_CHEGADA T NOT NULL, ;
                            AUDITORIA C(140) NOT NULL, ;
                            ATZAPAGAR T NOT NULL, ;
                            PROGPAGTO D NOT NULL, ;
                            IDAPAGAR I NOT NULL)

***** Create each index for EVENTO_EQUIPE *****
INDEX ON IDMEMBRO TAG IDMEMBRO COLLATE 'MACHINE'
INDEX ON IDEVENTO TAG IDEVENTO COLLATE 'MACHINE'
INDEX ON I_D TAG I_D COLLATE 'MACHINE'

***** Change properties for EVENTO_EQUIPE *****
ENDFUNC

FUNCTION MakeTable_TRANSP_ITINERARIO
***** Table setup for TRANSP_ITINERARIO *****
CREATE TABLE 'TRANSP_ITINERARIO.DBF' NAME 'TRANSP_ITINERARIO' (I_D I NOT NULL AUTOINC NEXTVALUE 3595 STEP 1, ;
                                IDTRANSP I NOT NULL, ;
                                TIPO N(1, 0) NOT NULL, ;
                                ENDERECO C(40) NOT NULL, ;
                                CIDADE C(25) NOT NULL, ;
                                BAIRRO C(25) NOT NULL, ;
                                UF C(2) NOT NULL, ;
                                FONE C(20) NOT NULL, ;
                                LOCALNOME C(30) NOT NULL)

***** Create each index for TRANSP_ITINERARIO *****
INDEX ON IDTRANSP TAG IDTRANSP COLLATE 'MACHINE'
ALTER TABLE 'TRANSP_ITINERARIO' ADD PRIMARY KEY I_D TAG I_D COLLATE 'MACHINE'

***** Change properties for TRANSP_ITINERARIO *****
ENDFUNC

FUNCTION MakeTable_TABTRANS
***** Table setup for TABTRANS *****
CREATE TABLE 'TABTRANS.DBF' NAME 'TABTRANS' (ID I NOT NULL AUTOINC NEXTVALUE 1429 STEP 1, ;
                       IDFILIAL C(2) NOT NULL, ;
                       IDCONTRATO I NOT NULL, ;
                       CHAVE C(40) NOT NULL, ;
                       CFG_VALOR M NOT NULL, ;
                       HR_PARADA Y NOT NULL, ;
                       DESTACAR C(100) NOT NULL)

***** Create each index for TABTRANS *****
INDEX ON CHAVE TAG CHAVE COLLATE 'MACHINE'
INDEX ON IDCONTRATO TAG IDCONTRATO COLLATE 'MACHINE'
INDEX ON IDFILIAL TAG IDFILIAL COLLATE 'MACHINE'
INDEX ON ID TAG ID COLLATE 'MACHINE'

***** Change properties for TABTRANS *****
ENDFUNC

FUNCTION MakeTable_TABTRANS_CFG
***** Table setup for TABTRANS_CFG *****
CREATE TABLE 'TABTRANS_CFG.DBF' NAME 'TABTRANS_CFG' (ID I NOT NULL AUTOINC NEXTVALUE 2116 STEP 1, ;
                           IDTABTRANS I NOT NULL DEFAULT Tabtrans.id, ;
                           IDFILIAL C(2) NOT NULL, ;
                           IDCONTRATO I NOT NULL, ;
                           KM_DE N(3, 0) NOT NULL, ;
                           KM_ATE N(3, 0) NOT NULL, ;
                           TAXA Y NOT NULL, ;
                           VALOR_KM Y NOT NULL)

***** Create each index for TABTRANS_CFG *****
INDEX ON IDCONTRATO TAG IDCONTRATO COLLATE 'MACHINE'
INDEX ON IDFILIAL TAG IDFILIAL COLLATE 'MACHINE'
INDEX ON IDTABTRANS TAG IDTABTRANS COLLATE 'MACHINE'
INDEX ON ID TAG ID COLLATE 'MACHINE'

***** Change properties for TABTRANS_CFG *****
DBSETPROP('TABTRANS_CFG.KM_DE', 'Field', 'Caption', "De")
DBSETPROP('TABTRANS_CFG.KM_DE', 'Field', 'InputMask', "999")
DBSETPROP('TABTRANS_CFG.KM_DE', 'Field', 'Format', "K")
DBSETPROP('TABTRANS_CFG.KM_ATE', 'Field', 'Caption', "Até")
DBSETPROP('TABTRANS_CFG.KM_ATE', 'Field', 'InputMask', "999")
DBSETPROP('TABTRANS_CFG.KM_ATE', 'Field', 'Format', "K")
DBSETPROP('TABTRANS_CFG.TAXA', 'Field', 'Caption', "Taxa")
DBSETPROP('TABTRANS_CFG.TAXA', 'Field', 'InputMask', "999,999,999.99")
DBSETPROP('TABTRANS_CFG.TAXA', 'Field', 'Format', "K")
DBSETPROP('TABTRANS_CFG.VALOR_KM', 'Field', 'Caption', "Valor/km")
DBSETPROP('TABTRANS_CFG.VALOR_KM', 'Field', 'InputMask', "999,999,999.99")
DBSETPROP('TABTRANS_CFG.VALOR_KM', 'Field', 'Format', "K")
ENDFUNC

FUNCTION MakeTable_PGEQP
***** Table setup for PGEQP *****
CREATE TABLE 'PGEQP.DBF' NAME 'PGEQP' (IDFILIAL C(2) NOT NULL, ;
                    TIPO C(10) NOT NULL, ;
                    HR_PARADA Y NOT NULL, ;
                    EXTRA_DE00A06 Y NOT NULL, ;
                    EXTRA_DE06A99 Y NOT NULL)

***** Create each index for PGEQP *****
INDEX ON IDFILIAL+TIPO TAG FIL_TIPO COLLATE 'MACHINE'
INDEX ON IDFILIAL TAG IDFILIAL COLLATE 'MACHINE'

***** Change properties for PGEQP *****
ENDFUNC

FUNCTION MakeTable_PGEQP_CFG
***** Table setup for PGEQP_CFG *****
CREATE TABLE 'PGEQP_CFG.DBF' NAME 'PGEQP_CFG' (IDFILIAL C(2) NOT NULL DEFAULT Pgeqp.idfilial, ;
                        TIPO C(10) NOT NULL DEFAULT Pgeqp.tipo, ;
                        KM_DE C(3) NOT NULL, ;
                        KM_ATE C(3) NOT NULL, ;
                        HR_DE C(5) NOT NULL, ;
                        HR_ATE C(5) NOT NULL, ;
                        FIXO_PLANTAO Y NOT NULL, ;
                        FIXO_EXTRA Y NOT NULL, ;
                        FIXO_SAVISO Y NOT NULL, ;
                        VALOR_KM Y NOT NULL)

***** Create each index for PGEQP_CFG *****
INDEX ON IDFILIAL+TIPO+KM_DE+HR_DE TAG FIL_TIPO COLLATE 'MACHINE'

***** Change properties for PGEQP_CFG *****
ENDFUNC

FUNCTION MakeTable_EVENTO
***** Table setup for EVENTO *****
CREATE TABLE 'EVENTO.DBF' NAME 'EVENTO' (IDEVENTO I NOT NULL AUTOINC NEXTVALUE 200 STEP 1, ;
                     IDFILIAL C(2) NOT NULL, ;
                     SOLICITADO_EM T NOT NULL, ;
                     SITUACAO C(1) NOT NULL, ;
                     SOLICITANTE_NOME C(40) NOT NULL, ;
                     SOLICITANTE_FONE C(20) NOT NULL, ;
                     OBSERVACAO M NOT NULL, ;
                     EVE_NOME C(60) NOT NULL, ;
                     EVE_LOCAL C(60) NOT NULL, ;
                     EVE_CID C(20) NOT NULL, ;
                     EVE_FONE C(20) NOT NULL, ;
                     EVE_RESP_LOCAL C(30) NOT NULL, ;
                     EVE_RESP_LOCAL_CEL C(20) NOT NULL, ;
                     VALOR_PERMUTA Y NOT NULL, ;
                     FAT_CODIGO C(15) NOT NULL, ;
                     FAT_NOME C(60) NOT NULL, ;
                     FAT_CEP C(10) NOT NULL, ;
                     FAT_END C(40) NOT NULL, ;
                     FAT_BAIRRO C(20) NOT NULL, ;
                     FAT_CIDADE C(25) NOT NULL, ;
                     FAT_UF C(2) NOT NULL, ;
                     FAT_FORMA C(15) NOT NULL, ;
                     FAT_PORTADOR I NOT NULL, ;
                     FAT_VENCIMENTO D NOT NULL, ;
                     FAT_CONTROLE I NOT NULL, ;
                     FAT_CGC_CPF C(18) NOT NULL, ;
                     NECESSIDADES C(10) NOT NULL, ;
                     NECESSIDADES_EXTRAS C(35) NOT NULL, ;
                     QTD_MEDICO N(2, 0) NOT NULL, ;
                     QTD_TECNICO N(2, 0) NOT NULL, ;
                     QTD_MOTORISTA N(2, 0) NOT NULL, ;
                     UNIDADE_DETALHE C(20) NOT NULL, ;
                     NECESSIDADES_DETALHES M NOT NULL, ;
                     PEDAGIO Y NOT NULL, ;
                     DESP_EXTRA Y NOT NULL, ;
                     PERMUTA Y NOT NULL, ;
                     TOTAL Y NOT NULL, ;
                     V_MKT C(40) NOT NULL, ;
                     V_CENTRAL C(40) NOT NULL, ;
                     V_COBRANCA C(40) NOT NULL, ;
                     V_PESSOAL C(40) NOT NULL, ;
                     V_DIRETORIA C(40) NOT NULL, ;
                     V_FINANCEIRO C(40) NOT NULL, ;
                     AUDITORIA C(140) NOT NULL, ;
                     PREV_INICIO T NOT NULL, ;
                     PREV_TERMINO T NOT NULL, ;
                     PRORROGACAO T NOT NULL, ;
                     VALOR_HORA Y NOT NULL)

***** Create each index for EVENTO *****
INDEX ON SOLICITADO_EM TAG SOLICITADO COLLATE 'MACHINE'
INDEX ON IDFILIAL TAG IDFILIAL COLLATE 'MACHINE'
INDEX ON IDEVENTO TAG IDEVENTO COLLATE 'MACHINE'
INDEX ON PREV_INICIO TAG DATAEVE COLLATE 'MACHINE'

***** Change properties for EVENTO *****
DBSETPROP('EVENTO.IDFILIAL', 'Field', 'Caption', "Filial")
DBSETPROP('EVENTO.SOLICITADO_EM', 'Field', 'Caption', "Solicitado em")
DBSETPROP('EVENTO.SOLICITADO_EM', 'Field', 'Format', "KE")
DBSETPROP('EVENTO.SITUACAO', 'Field', 'Caption', "Situação")
DBSETPROP('EVENTO.SITUACAO', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.SOLICITANTE_NOME', 'Field', 'Caption', "Solicitante")
DBSETPROP('EVENTO.SOLICITANTE_NOME', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.SOLICITANTE_FONE', 'Field', 'Caption', "Fone")
DBSETPROP('EVENTO.SOLICITANTE_FONE', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.EVE_NOME', 'Field', 'Caption', "Nome Evento")
DBSETPROP('EVENTO.EVE_NOME', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.EVE_LOCAL', 'Field', 'Caption', "Local do Evento")
DBSETPROP('EVENTO.EVE_LOCAL', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.EVE_CID', 'Field', 'Caption', "Cidade")
DBSETPROP('EVENTO.EVE_CID', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.EVE_FONE', 'Field', 'Caption', "Fone")
DBSETPROP('EVENTO.EVE_FONE', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.EVE_RESP_LOCAL', 'Field', 'Caption', "Responsavel")
DBSETPROP('EVENTO.EVE_RESP_LOCAL', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.EVE_RESP_LOCAL_CEL', 'Field', 'Caption', "Celular")
DBSETPROP('EVENTO.EVE_RESP_LOCAL_CEL', 'Field', 'Format', "!K")
DBSETPROP('EVENTO.VALOR_PERMUTA', 'Field', 'Caption', "Permuta")
DBSETPROP('EVENTO.VALOR_PERMUTA', 'Field', 'InputMask', "999,999,999.99")
DBSETPROP('EVENTO.VALOR_PERMUTA', 'Field', 'Format', "K")
ENDFUNC

FUNCTION MakeTable_EVENTO_AGENDA
***** Table setup for EVENTO_AGENDA *****
CREATE TABLE 'EVENTO_AGENDA.DBF' NAME 'EVENTO_AGENDA' (I_D I NOT NULL AUTOINC NEXTVALUE 62 STEP 1, ;
                            IDEVENTO I NOT NULL, ;
                            PREV_INICIO T NOT NULL, ;
                            PREV_TERMINO T NOT NULL, ;
                            PRORROGACAO T NOT NULL, ;
                            VALOR_HORA Y NOT NULL, ;
                            OBS M NOT NULL)

***** Create each index for EVENTO_AGENDA *****
INDEX ON IDEVENTO TAG IDEVENTO COLLATE 'MACHINE'
INDEX ON I_D TAG I_D COLLATE 'MACHINE'

***** Change properties for EVENTO_AGENDA *****
DBSETPROP('EVENTO_AGENDA.IDEVENTO', 'Field', 'Caption', "evento.idevento")
DBSETPROP('EVENTO_AGENDA.PREV_INICIO', 'Field', 'Caption', "Inicio")
DBSETPROP('EVENTO_AGENDA.PREV_INICIO', 'Field', 'Format', "KE")
DBSETPROP('EVENTO_AGENDA.PREV_TERMINO', 'Field', 'Caption', "Termino")
DBSETPROP('EVENTO_AGENDA.PREV_TERMINO', 'Field', 'Format', "KE")
DBSETPROP('EVENTO_AGENDA.PRORROGACAO', 'Field', 'Caption', "Prorrogação")
DBSETPROP('EVENTO_AGENDA.PRORROGACAO', 'Field', 'Format', "KE")
DBSETPROP('EVENTO_AGENDA.VALOR_HORA', 'Field', 'Caption', "Valor/Hora")
DBSETPROP('EVENTO_AGENDA.VALOR_HORA', 'Field', 'InputMask', "999,999,999.99")
DBSETPROP('EVENTO_AGENDA.VALOR_HORA', 'Field', 'Format', "K")
ENDFUNC

FUNCTION MakeTable_TRANSP_PACIENTE
***** Table setup for TRANSP_PACIENTE *****
CREATE TABLE 'TRANSP_PACIENTE.DBF' NAME 'TRANSP_PACIENTE' (I_D I NOT NULL AUTOINC NEXTVALUE 1274 STEP 1, ;
                              IDTRANSP I NOT NULL, ;
                              NOMEPACIEN C(40) NOT NULL, ;
                              IDADE C(10) NOT NULL, ;
                              INT_LOCAL C(20) NOT NULL, ;
                              INT_DIAS N(3, 0) NOT NULL, ;
                              AC_FC C(10) NOT NULL, ;
                              AC_RITIMO C(30) NOT NULL, ;
                              AC_PA C(10) NOT NULL, ;
                              AC_PA_TIPO C(10) NOT NULL, ;
                              AC_OUTROS C(100) NOT NULL, ;
                              AC_BOMBAS N(1, 0) NOT NULL, ;
                              AC_DROGA1 C(60) NOT NULL, ;
                              AC_DROGA2 C(60) NOT NULL, ;
                              AC_DROGA3 C(60) NOT NULL, ;
                              AC_DROGA4 C(60) NOT NULL, ;
                              AC_DROGA5 C(60) NOT NULL, ;
                              AC_OUTRAS M NOT NULL, ;
                              AR_VIAS C(30) NOT NULL, ;
                              AR_DRENO N(1, 0) NOT NULL, ;
                              AR_MASCAT C(15) NOT NULL, ;
                              AR_MECANIC N(1, 0) NOT NULL, ;
                              AR_DURACAO C(5) NOT NULL, ;
                              AR_DUR_TIP C(5) NOT NULL, ;
                              PV_FIO2 C(5) NOT NULL, ;
                              PV_VOLCOR C(5) NOT NULL, ;
                              PV_FR C(5) NOT NULL, ;
                              PV_PEEP C(5) NOT NULL, ;
                              PV_PRES_IN C(5) NOT NULL, ;
                              PV_MODO C(60) NOT NULL, ;
                              AU_1 C(20) NOT NULL, ;
                              AU_2 C(20) NOT NULL, ;
                              AU_3 C(20) NOT NULL, ;
                              SN_GLASGOW N(2, 0) NOT NULL, ;
                              SN_PUPILAS C(50) NOT NULL, ;
                              SN_PLEGIAS C(5) NOT NULL, ;
                              SN_PARESIA C(5) NOT NULL, ;
                              AGI_1 C(100) NOT NULL, ;
                              PELE C(50) NOT NULL, ;
                              PELE_OUTRA C(50) NOT NULL, ;
                              POS_OPERA N(1, 0) NOT NULL, ;
                              CIRURGIA C(100) NOT NULL, ;
                              QUADRO M NOT NULL, ;
                              NECESSID M NOT NULL, ;
                              NECES_OUTR C(100) NOT NULL, ;
                              IDREG I NOT NULL, ;
                              RESP_INF C(30) NOT NULL, ;
                              CV_DATA T NOT NULL, ;
                              CV_COMQUEM C(25) NOT NULL, ;
                              CV_USR C(30) NOT NULL, ;
                              LIBERADO N(1, 0) NOT NULL, ;
                              LIB_DATA T NOT NULL, ;
                              AUDITORIA C(130) NOT NULL)

***** Create each index for TRANSP_PACIENTE *****
INDEX ON IDTRANSP TAG IDTRANSP COLLATE 'MACHINE'
INDEX ON I_D TAG I_D COLLATE 'MACHINE'

***** Change properties for TRANSP_PACIENTE *****
ENDFUNC


FUNCTION DisplayStatus(lcMessage)
WAIT WINDOW NOWAIT lcMessage
ENDFUNC
